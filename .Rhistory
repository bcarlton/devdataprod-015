#calc PRESS value first
pred.resids <- residuals(model)/(1-lm.influence(model)$hat)
PRESS <- sum(pred.resids^2)
#calc predicted R Squared from PRESS statistic
total.sum.squares <- sum(anova(model)$"Sum Sq")
pred_r_squared <- 1 - (PRESS/total.sum.squares)
return(pred_r_squared)
}
transmission <- vector()
for (i in 1:length(mtcars$am)) {
if (mtcars$am[i] == 0) {
transmission[i] = "automatic"
} else {
transmission[i] = "manual"
}
}
mtcars$transmission <- factor(transmission)
rm(transmission)
mtcars <- mtcars[,-9]
main.model <- lm(mpg ~ transmission+wt+qsec, data=mtcars)
base <- lm(formula=mpg~transmission, data=mtcars)
base.w.wt <- update(base, formula=mpg~transmission+wt)
base.wt.anova <- anova(base, base.w.wt)
main.anova <- anova(base.w.wt, main.model)
main.anova
main.model
summary(main.model)
base.wt.anova
summary(main.model)
str(summary(main.model)$coefficients)
table(summary(main.model)$coefficients)
bs <- data.frame(summary(main.model)$coefficients)
bs
require(knitr)
kable(bs)
summary.df <- summary(main.model)$coefficients
names(summary.df)
rownames(summary.df)
rownames(summary.df)[2]
name.holder <- names(summary.df)
names(summary.df) <- c("Intercept", "Transmission-Manual", "Weight", "Quarter-mile time")
names(summary.df)
summary.df <- summary(main.model)$coefficients
name.holder <- rownames(summary.df)
rownames(summary.df) <- c("Intercept", "Transmission-Manual", "Weight", "Quarter-mile time")
rownames(summary.df)
names(summary.df)
summary.df
?colnames
colnames(summary.df)
?kable
colnames(summary.df)
predRSquared(base)
predRSquared(base.w.wt)
predRSquared(main.model)
plot(main.model, which=2)
suppressMessages(require(ggplot2))
suppressMessages(require(DAAG))
predRSquared <- function(model){
#calc PRESS value first
pred.resids <- residuals(model)/(1-lm.influence(model)$hat)
PRESS <- sum(pred.resids^2)
#calc predicted R Squared from PRESS statistic
total.sum.squares <- sum(anova(model)$"Sum Sq")
pred_r_squared <- 1 - (PRESS/total.sum.squares)
return(pred_r_squared)
}
transmission <- vector()
for (i in 1:length(mtcars$am)) {
if (mtcars$am[i] == 0) {
transmission[i] = "automatic"
} else {
transmission[i] = "manual"
}
}
mtcars$transmission <- factor(transmission)
rm(transmission)
mtcars <- mtcars[,-9]
main.model <- lm(mpg ~ transmission+wt+qsec, data=mtcars)
base <- lm(formula=mpg~transmission, data=mtcars)
base.w.wt <- update(base, formula=mpg~transmission+wt)
base.wt.anova <- anova(base, base.w.wt)
base.wt.anova
main.anova <- anova(base.w.wt, main.model)
main.anova
main.model
summary(main.model)
summary.df <- summary(main.model)$coefficients
name.holder <- rownames(summary.df)
rownames(summary.df) <- c("Intercept", "Transmission-Manual", "Weight", "Quarter-mile time")
rownames(summary.df)
names(summary.df)
summary.df
colnames(summary.df)
predRSquared(base)
predRSquared(base.w.wt)
predRSquared(main.model)
plot(main.model, which=2)
plot(main.model, which=3)
plot(main.model, which=4)
plot(main.model, which=5)
?mfrow
?par
par(mfrow=c(2,2))
plot(main.model, which=2)
plot(main.model, which=3)
plot(main.model, which=4)
plot(main.model, which=5)
par(mfrow=c(2,2))
plot(main.model, which=2)
plot(main.model, which=3)
plot(main.model, which=4)
plot(main.model, which=5)
require(swirl)
swirl()
ravenData
mdl <- glm(formula=ravenWinNum~ravenScore, family=binomial, data=ravenData)
lodds <- predict(mdl, data.frame(ravenScore=c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
confint(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
swirl()
var(rpois(1000, 50))
?shuttle
require(MASS)
?shuttle
?logit
model1 <- glm(formula=auto~wind, data=shuttle, family="binomial")
model1 <- glm(formula=use~wind, data=shuttle, family="binomial")
summary(model1)
model1 <- glm(formula=use~wind-1, data=shuttle, family="binomial")
summary(model1)
exp(summary(model1)$coefficients)
model1$coef[1]
exp(model1$coef[1])
exp(model1$coef[1])/exp(model1$coef[2])
exp(model1$coef[1])/(1-exp(model1$coef[1])
)
exp(model1$coef[1])/(1-exp(model1$coef[1]))*((1-exp(model$coef[2]))/exp(model$coef[2]))
exp(model1$coef[1])/(1-exp(model1$coef[1]))*((1-exp(model1$coef[2]))/exp(model1$coef[2]))
summary(model1)
exp(summary(model1)$coefficients)
?glm
anova(model1)
model1 <- glm(formula=use~wind, data=shuttle, family="binomial")
summary(model1)
model1 <- glm(formula=use~wind-1, data=shuttle, family="binomial")
summary(model1)
exp(summary(model1)$coefficients)
exp1 <- exp(summary(model1)$coefficients)
exp1
exp1[1,1]-exp[2,1]
exp1[1,1]-exp1[2,1]
model1$coef[1]-model1$coef[2]
exp(model1$coef[1]-model1$coef[2])
.031/(1-0.31)
(1-0.31)/.031
(1-.031)/.031
raw.coef.diff <- model1$coef[1]-model1$coef[2]
1-raw.coef.diff
raw.coef.diff/(1-raw.coef.diff)
1/(raw.coef.diff/(1-raw.coef.diff))
exp(summary(model1)$coefficients)
exp(raw.coef.diff)
model2 <- glm(formula=use~wind+magn-1, data=shuttle, family="binomial")
summary(model2)$coefficients
exp(0.777778)
exp(summary(model2)$coefficients)
exp(summary(model2)$coefficients)[1,1]
exp(summary(model2)$coefficients)[1,1]/exp(summary(model2)$coefficients[2,1])
exp(model1$coef[1]-model1$coef[2])
model3 <- glm(formula=I(1-use)~wind, data=shuttle, family="binomial")
shuttle$new.use <- 1-use
shuttle$new.use <- 1-shuttle$use
shuttle$new.use <- ifelse(shuttle$use == 0, -1, 0)
shuttle$new.use
shuttle$new.use <- ifelse(shuttle$use == "0", -1, 0)
shuttle$new.use
shuttle$new.use <- char(shuttle$use)
shuttle$new.use <- t.char(shuttle$use)
shuttle$new.use <- t0.char(shuttle$use)
shuttle$new.use <- to.char(shuttle$use)
shuttle$new.use <- to.car(shuttle$use)
shuttle$new.use <- tochar(shuttle$use)
?char
shuttle$new.use <- as.character(shuttle$use)
shutle$new.use
shuttle$new.use
levels(shuttle$use)
shuttle$use
levels(shuttle$use)
?levels
shuttle$use[factors(shuttle$use)==1,]
shuttle$use[factor(shuttle$use)==1,]
shuttle$use[level(shuttle$use)==1,]
shuttle$use[levels(shuttle$use)==1,]
shuttle$new.use <- ifelse(shuttle$use == "auto", "noauto", "auto")
head(shuttle$new.use)
head(shuttle$use)
shuttle$new.use <- factor(ifelse(shuttle$use == "auto", "noauto", "auto"))
model3 <- glm(formula=I~wind, data=shuttle, family="binomial")
shuttle$new.use <- factor(ifelse(shuttle$use == "auto", "noauto", "auto"))
model3 <- glm(formula=new.use~wind, data=shuttle, family="binomial")
summary(model3)
shuttle$new.use <- factor(ifelse(shuttle$use == "auto", "noauto", "auto"))
model3 <- glm(formula=new.use~wind-1, data=shuttle, family="binomial")
summary(model3)$coefficients
summary(model1)$coefficients
str(InsectSprays)
model4 <- glm(formula=count~spray, data=InsectSprays, family="poisson")
summary(model4)
model4 <- glm(formula=count~spray-1, data=InsectSprays, family="poisson")
summary(model4)
model4 <- glm(formula=count~spray-1, data=InsectSprays,
offset=log(count+1), family="poisson")
summary(model4)
model4 <- glm(formula=count~spray, data=InsectSprays,
offset=log(count+1), family="poisson")
summary(model4)
model4 <- glm(formula=count~spray, data=InsectSprays,
offset=log(spray+1), family="poisson")
summary(model4)
model4 <- glm(formula=count~spray, data=InsectSprays,
offset=log(count+1), family="poisson")
summary(model4)
str(InsectSprays)
?glm
model4 <- glm(formula=count~spray, data=InsectSprays,
offset=log(count+1), family="poisson")
summary(model4)
model4 <- glm(formula=count~spray-1, data=InsectSprays,
offset=log(count+1), family="poisson")
summary(model4)
glm(formula=count~spray-1, data=InsectSprays, family="poisson")
model4$coef[2]/model4$coef[1]
model4$coef[1]/model4$coef[2]
glm(formula=count~spray-1, data=InsectSprays, family="poisson")
2.730/2.674
model4$coef[2]-model4$coef[1]
exp(model4$coef[2]-model4$coef[1])
exp(model4$coef[2]/model4$coef[1])
exp(model4$coef[1]/model4$coef[2])
model4 <- glm(formula=count~spray-1, data=InsectSprays, family="poisson")
summary(model4)
exp(model4$coef[2]-model4$coef[1])
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
knots <- 0
splines <- sapply(knots, function(knot) (x>knot)*(x-knot))
xMat <- cbind(1,x,splines)
yhat <- predict(lm(y~xMat -1))
model6 <- lm(y~xMat)
summary(model6)
knots <- 0
splines <- sapply(knots, function(knot) (x>knot)*(x-knot))
xMat <- cbind(1,x,splines)
yhat <- predict(lm(y~xMat -1))
model6 <- lm(y~xMat)
summary(model6)
plot(x,y, frame=FALSE, pch=21, bg="lightblue",cex=2)
lines(x,yhat, col="red", lwd=2)
str(InsectSprays)
InsectSpray$new.spray <- ifelse(InsectSpray %in% c("A","C","E"), "A","B")
InsectSpray$new.spray <- ifelse(InsectSpray$spray %in% c("A","C","E"), "A","B")
InsectSprays$new.spray <- ifelse(InsectSprays$spray %in% c("A","C","E"), "A","B")
str(InsectSprays)
unique(InsectSprays$new.spray)
table(unique(InsectSprays$new.spray))
InsectSprays$new.spray <- factor(InsectSprays$new.spray)
str(InsectSprays)
InsectSprays$new.spray
t <- runif(length(InsectSprays$new.spray), 1,10)
t
model5 <- glm(formula=count~new.spray+offset(t), data=InsectSprays, familecy="poisson")
model5 <- glm(formula=count~new.spray+offset(t), data=InsectSprays, family="poisson")
summary(model5)
model5.new <- glm(formula=count~new.spray+offset(t+log(10)), data=InsectSprays, family="poisson")
InsectSprays$new.spray <- ifelse(InsectSprays$spray %in% c("A","C","E"), "A","B")
InsectSprays$new.spray <- factor(InsectSprays$new.spray)
t <- runif(length(InsectSprays$new.spray), 1,10)
model5 <- glm(formula=count~new.spray+offset(t), data=InsectSprays, family="poisson")
summary(model5$coefficients)
model5.new <- glm(formula=count~new.spray+offset(t+log(10)), data=InsectSprays, family="poisson")
summary(model5.new)$coefficients
summary(model5)$coefficients
model5.new <- glm(formula=count~new.spray+offset(t+log(10)), data=InsectSprays, family="poisson")
summary(model5.new)$coefficients
InsectSprays$new.spray <- ifelse(InsectSprays$spray %in% c("A","C","E"), "A","B")
InsectSprays$new.spray <- factor(InsectSprays$new.spray)
t <- runif(length(InsectSprays$new.spray), 1,10)
model5 <- glm(formula=count~new.spray+offset(t)-1, data=InsectSprays, family="poisson")
summary(model5)$coefficients
model5.new <- glm(formula=count~new.spray+offset(t+log(10))-1, data=InsectSprays, family="poisson")
summary(model5.new)$coefficients
log(10)
model5$coef[1]-log(10)
model5$coef[2]-log(10)
shuttle$new.use <- factor(ifelse(shuttle$use == "auto", "noauto", "auto"))
model3 <- glm(formula=new.use~wind-1, data=shuttle, family="binomial")
summary(model3)$coefficients
summary(model1)$coefficients
shuttle$new.use <- factor(ifelse(shuttle$use == "auto", "noauto", "auto"))
model3 <- glm(formula=new.use~wind, data=shuttle, family="binomial")
summary(model3)$coefficients
summary(model1)$coefficients
model4 <- glm(formula=count~spray-1, data=InsectSprays, family="poisson")
summary(model4)
exp(model4$coef[2]-model4$coef[1])
exp(model4$coef[1]-model4$coef[2])
# Question 2
# Consider the previous problem. Give the estimated odds ratio for autolander use comparing head winds (numerator) to tail winds (denominator) adjusting for wind strength from the variable magn.
#
# 0.684
# 1.00
# 0.969
# 1.485
model2 <- glm(formula=use~wind+magn-1, data=shuttle, family="binomial")
summary(model2)$coefficients
model2$coef[1]-model2$coef[2]
exp(model2$coef[1]-model2$coef[2])
exp(summary(model1)$coefficients)
exp(model1$coef[1])/(1-exp(model1$coef[1]))
exp(model2$coef[2])/(1-exp(model2$coef[2]))
3.5/2.061204
exp(1.327)
log(1.327)
exp(model1$coef[1])/exp(model1$coef[2])
str(shuttle)
shuttle$use.bin <- ifelse(shuttle$use=="auto",0,1)
shuttle$use.bin <- ifelse(shuttle$use=="auto",0,1)
model1 <- glm(formula=use.bin~wind-1, data=shuttle, family="binomial")
summary(model1)
exp(summary(model1)$coefficients)
log(exp(2))
shuttle$use.bin <- ifelse(shuttle$use=="auto",0,1)
model1 <- glm(formula=use.bin~wind-1, data=shuttle, family="binomial")
summary(model1)
shuttle$use.bin <- ifelse(shuttle$use=="auto",1,0)
model1 <- glm(formula=use.bin~wind-1, data=shuttle, family="binomial")
summary(model1)
levels(shuttle$wind)
shuttle$wind.bin <- ifelse(shuttle$wind=="head",1,0)
model1 <- glm(formula=use.bin~wind.bin-1, data=shuttle, family="binomial")
summary(model1)
exp(0.2513)
model2 <- glm(formula=use.bin~wind.bin+magn-1,
data=shuttle, family="binomial")
summary(model2)$coefficients
shuttle$wind.bin <- factor(ifelse(shuttle$wind=="head",1,0))
shuttle$use.bin <- factor(ifelse(shuttle$use=="auto",1,0))
shuttle$wind.bin <- factor(ifelse(shuttle$wind=="head",1,0))
model1 <- glm(formula=use.bin~wind.bin-1, data=shuttle, family="binomial")
summary(model1)
shuttle$wind.bin <- ifelse(shuttle$wind=="head",0,1)
model1 <- glm(formula=use.bin~wind.bin-1, data=shuttle, family="binomial")
summary(model1)
levels(shuttle$use)
as.numeric(levels(shuttle$use))
as.numeric(shuttle$use)
shuttle$use
as.numeric(shuttle$wind)
shuttle$wind
shuttle$use.bin <- ifelse(shuttle$use=="auto",0,1)
shuttle$wind.bin <- ifelse(shuttle$wind=="head",0,1)
model1 <- glm(formula=use.bin~wind.bin-1, data=shuttle, family="binomial")
summary(model1)
shuttle$use.bin <- factor(shuttle$use.bin)
levels(shuttle$usebin)
levels(shuttle$use.bin)
shuttle$wind.bin <- factor(shuttle$wind.bin)
levels(shuttle$wind.bin)
shuttle$use.bin <- ifelse(shuttle$use=="auto",0,1)
shuttle$use.bin <- factor(shuttle$use.bin)
shuttle$wind.bin <- ifelse(shuttle$wind=="head",0,1)
shuttle$wind.bin <- factor(shuttle$wind.bin)
model1 <- glm(formula=use.bin~wind.bin-1, data=shuttle, family="binomial")
summary(model1)
exp(model1$coef[1])/exp(model1$coef[2])
model2 <- glm(formula=use.bin~wind.bin+magn-1,
data=shuttle, family="binomial")
summary(model2)$coefficients
exp(model2$coef[1]-model2$coef[2])
exp(c(model5$coef[1],model5$coef[2]))
InsectSprays$new.spray <- ifelse(InsectSprays$spray %in% c("A","C","E"), "A","B")
InsectSprays$new.spray <- factor(InsectSprays$new.spray)
t <- runif(length(InsectSprays$new.spray), 1,10)
model5 <- glm(formula=count~new.spray+offset(t)-1, data=InsectSprays, family="poisson")
summary(model5)$coefficients
model5.new <- glm(formula=count~new.spray+offset(t+log(10))-1, data=InsectSprays, family="poisson")
summary(model5.new)$coefficients
exp(c(model5$coef[1],model5$coef[2]))
exp(c(model5$coef[1],model5$coef[2]))
exp(c(model5.new$coef[1],model5.new$coef[2]))
model1 <- glm(formula=use~wind-1, data=shuttle, family="binomial")
summary(model1)
coef1exp <- exp(model1$coef[1])
coef2exp <- exp(model1$coef[2])
coef1exp/(1-coef1exp)
coef2exp/(1-coef2exp)
coef1exp/(1-coef1exp)/(coef2exp/(1-coef2exp))
1/(coef1exp/(1-coef1exp)/(coef2exp/(1-coef2exp)))
coef1exp-coef2exp
coef2exp-coef1exp
coef1exp/coef2exp
coef2exp/coef1exp
1/1.485
model2 <- glm(formula=use~wind+magn-1,
data=shuttle, family="binomial")
summary(model2)$coefficients
exp(model2$coef[1])/exp(model2$coef[2])
exp(model2$coef[2])/exp(model2$coef[1])
require(shiny)
View(splines)
rm(list=ls())
?titlePanel
shiny::runApp('Desktop')
?sidebarPanel
shiny::runApp('Desktop')
shiny::runApp('Desktop')
shiny::runApp('Desktop')
?sidebarLayout
shiny::runApp('Desktop')
shiny::runApp('Desktop')
shiny::runApp('Desktop')
?textInputp
?textInput
shiny::runApp('Desktop')
shiny::runApp('Desktop')
shiny::runApp('Desktop')
shiny::runApp('Desktop')
?sidebarLayout
position="left",
shiny::runApp('Desktop')
shiny::runApp('Desktop')
?sidebarPanel
shiny::runApp('Desktop')
shiny::runApp('Desktop')
shiny::runApp('Desktop')
shiny::runApp('Desktop')
shiny::runApp('Desktop')
?renderText
shiny::runApp('Desktop')
?textOutput
shiny::runApp('Desktop')
shiny::runApp('Desktop')
require(devtools)
install_github('slidify','ramnathv')
install_github('slidifyLibraries,'ramnathv/slidify')
?install_github
install_github('slidifyLibraries,'ramnathv//slidify')
install_github('slidifyLibraries,'ramnathv')
install_github('slidifyLibraries','ramnathv/slidify')
install_github('slidifyLibraries','ramnathv/slidify/slidifyLibraries')
install_github('slidifyLibraries','ramnathv/slidify/slidifyLibraries/slidifyLibraries')
install_github('slidifyLibraries','ramnathv')
require(c(shiny,ggplot2))
?require
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
rm(list=ls())
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
?submitButton
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
?helpText
shiny::runApp('R/devdataprod-015/course_project_1')
?column
?actionButton
shiny::runApp('R/devdataprod-015/course_project_1')
install.packages(c("BH", "curl", "ggvis", "manipulate", "plyr", "R.utils", "rversions", "shiny", "sp", "testthat", "XML"))
install.packages("xml2")
install.packages(c("curl", "XML"))
install.packages(c("curl", "XML"))
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
install.packages("DT")
shiny::runApp('R/devdataprod-015/course_project_1')
?write.csv
rm(list=ls())
shiny::runApp('R/devdataprod-015/course_project_1')
?eventReactive
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
library(DT)
shiny::runApp('R/devdataprod-015/course_project_1')
shiny::runApp('R/devdataprod-015/course_project_1')
foodlist.df <- read.csv(file="food_list.csv", header=TRUE, colClasses=c("character","character","numeric","numeric","numeric","numeric","numeric"))
setwd('~/R/devdataprod-015/course_project_1/')
foodlist.df <- read.csv(file="food_list.csv", header=TRUE, colClasses=c("character","character","numeric","numeric","numeric","numeric","numeric"))
class(foodlist.df)
?reactiveValues
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
